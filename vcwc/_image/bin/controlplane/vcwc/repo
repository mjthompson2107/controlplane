#!/usr/bin/env bash
(
	export PATH="$VCWC_EXECUTIONPLANE_APIINTERNALPATH_VCWC"
	. executionplane-invoke "$0 $@"
	imageName="${@: -1}"
	rootPath="/vcwc/pwd/${imageName}"
	. invoke-script $imageName environment

	currentpwd=$(pwd)
	if [[ -d $rootPath ]] ; then
	cd $rootPath
	fi
	case "$1" in
		commit)
			message="${@:2:$#-2}"
			executionplane git add .
			executionplane git commit -m "$(echo "$message")"
			executionplane git tag -f ${VCWC_TAG}
		;;
		compact)
			executionplane git reflog expire --updateref --rewrite --stale-fix --expire=all --all
			executionplane git repack -A -d -f -F --window=4095 --depth=4095 --unpack-unreachable=all
			executionplane git prune --expire=all
			executionplane git gc --prune=all --aggressive
			executionplane git push -f --all
			executionplane git push -f --tags
		;;
		config)
			executionplane git remote set-url origin "https://github.com/${VCWC_REALM_RUNTIME}/${VCWC_ECOSYSTEM_RUNTIME}.${VCWC_IMAGE}.${VCWC_FLAVOR}.git"
			executionplane git branch --set-upstream-to=origin/master master
			executionplane git config core.filemode false
			executionplane git config credential.helper store
		;;
		create)
			executionplane git init
			executionplane git remote add origin test
		;;
		extract)
			. executionplane-capture-output docker create ${VCWC_REGISTRY}$imageName
			destination="/vcwc/pwd/$imageName"
			executionplane mkdir -p $destination
			executionplane docker container cp $VCWC_EXECUTIONPLANE_OUTPUT:/vcwc/repo/. $destination
		;;
		load)
			fromTar="false"
			if [[ "$2" == "--from-tar" ]] ; then
				fromTar="true"
				shift
			fi
			repo-load $fromTar "${imageName}"
			repo-load $fromTar "${imageName}:${VCWC_TAG}"
		;;
		log)
			executionplane git log --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative -n 10
		;;
		push)
			executionplane "--errors-only" git push -f origin master
			executionplane "--errors-only" git push -f origin "$VCWC_TAG"
		;;
		remove)
			cd $currentpwd
			executionplane rm -rf $rootPath
		;;
		reset)
#			executionplane git tag | git push origin ":refs/tags/$INPUT"
			executionplane rm -rf .git
			repo create "$imageName"
			repo commit -m "initial checkin after reset, for earlier history extract repository from container image of previous (major) version." "$imageName"
			repo config "$imageName"
			repo push "$imageName"
			repo config "$imageName"
		;;
		retag-image)
			executionplane docker tag "${VCWC_REGISTRY}$imageName" "$2/${VCWC_ECOSYSTEM_RUNTIME}.${VCWC_IMAGE}.${VCWC_FLAVOR}"
			executionplane docker tag "${VCWC_REGISTRY}$imageName" "$2/${VCWC_ECOSYSTEM_RUNTIME}.${VCWC_IMAGE}.${VCWC_FLAVOR}:${VCWC_TAG}"
		;;
		save)
      repo-save "$imageName:$VCWC_TAG"
		;;
		status)
			executionplane git status
		;;
		tag-registry)
			executionplane docker tag "$imageName:$VCWC_TAG" "${VCWC_REGISTRY}$imageName"
			executionplane docker tag "$imageName:$VCWC_TAG" "${VCWC_REGISTRY}$imageName:$VCWC_TAG"
		;;
		untag-registry)
			executionplane docker tag "${VCWC_REGISTRY}$imageName:$VCWC_TAG" "$imageName"
			executionplane docker tag "${VCWC_REGISTRY}$imageName:$VCWC_TAG" "$imageName:$VCWC_TAG"
		;;
		--info)
			. info-summary repo
		;;
		*)
			executionplane-error "Method not recognised: $1."
		;;
	esac
	cd $currentpwd
	executionplane-complete
)
